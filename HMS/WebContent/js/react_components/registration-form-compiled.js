"use strict";var _createClass=function(){function a(b,c){for(var f,d=0;d<c.length;d++)f=c[d],f.enumerable=f.enumerable||!1,f.configurable=!0,"value"in f&&(f.writable=!0),Object.defineProperty(b,f.key,f)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return b&&("object"==typeof b||"function"==typeof b)?b:a}function _inherits(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var RegistrationForm=function(a){function b(c){_classCallCheck(this,b);var d=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,c));return d.registrationFormRef=React.createRef(),d}return _inherits(b,a),_createClass(b,[{key:"clearAllErrors",value:function clearAllErrors(){var c=this.registrationFormRef.current,d=c.querySelectorAll("input");d.forEach(function(f){var g=f.parentElement.querySelector("label");g&&(f.classList.remove("invalid"),g.dataset.error="")})}},{key:"insertErrorMessage",value:function insertErrorMessage(c,d){var f=this.registrationFormRef.current,g=c.parentElement.querySelector("label");g&&(c.classList.add("validate","invalid"),c.value="",g.classList.remove("active"),c.addEventListener("click",function(){g.dataset.error="",c.classList.remove("validate","invalid")}),g.dataset.error?g.dataset.error+=d:g.dataset.error=d)}},{key:"checkFormFilled",value:function checkFormFilled(){var c=this.registrationFormRef.current;this.clearAllErrors();var d=!1,f=c.querySelector("#firstNameInput"),g=c.querySelector("#lastNameInput"),h=c.querySelector("#emailInput"),j=c.querySelector("#passwordInput"),k=c.querySelector("#passwordConfirmationInput"),l=c.querySelector("#addressInput"),m=c.querySelector("#petInput"),n=c.querySelector("#specialisationInput"),o=c.querySelector("#companyNameInput");return""==f.value&&(this.insertErrorMessage(f,"First name field is blank"),d=!0),""==g.value&&(this.insertErrorMessage(g,"Last name field is blank"),d=!0),""==h.value&&(this.insertErrorMessage(h,"Email field is blank"),d=!0),""==j.value&&(this.insertErrorMessage(j,"Password field is blank"),d=!0),j.value==k.value?""==k.value&&(this.insertErrorMessage(k,"Password confirmation field is blank"),d=!0):(this.insertErrorMessage(k,"Password and confirmation do not match"),d=!0),""==l.value&&(this.insertErrorMessage(l,"Address field is blank"),d=!0),n&&""==n.value&&(this.insertErrorMessage(n,"Specialisation field is blank"),d=!0),o&&""==o.value&&(this.insertErrorMessage(o,"Company name field is blank"),d=!0),!d}},{key:"componentDidMount",value:function componentDidMount(){var c=this;this.registrationFormRef.current.addEventListener("submit",function(d){return!!c.checkFormFilled()||(d.preventDefault(),!1)})}},{key:"render",value:function render(){var c=React.createElement("form",{ref:this.registrationFormRef,className:"md-form",method:"POST",action:"registrationUpdate.jsp"},React.createElement("input",{id:"accountTypeInput",type:"hidden",value:this.props.accountType}),React.createElement("div",{className:"form-row"},React.createElement("div",{className:"col form-group"},React.createElement("input",{type:"text",className:"form-control",id:"firstNameInput"}),React.createElement("label",{htmlFor:"firstNameInput"},"First Name")),React.createElement("div",{className:"col form-group"},React.createElement("input",{type:"text",className:"form-control",id:"lastNameInput"}),React.createElement("label",{htmlFor:"lastNameInput"},"Last Name"))),React.createElement("div",{className:"form-group"},React.createElement("input",{type:"text",className:"form-control",id:"emailInput"}),React.createElement("label",{htmlFor:"emailInput"},"Email address")),React.createElement("div",{className:"form-group"},React.createElement("input",{type:"password",className:"form-control",id:"passwordInput"}),React.createElement("label",{htmlFor:"passwordInput"},"Password")),React.createElement("div",{className:"form-group"},React.createElement("input",{type:"password",className:"form-control",id:"passwordConfirmationInput"}),React.createElement("label",{autoComplete:"new-password",htmlFor:"passwordConfirmationInput"},"Password Confirmation")),React.createElement("div",{className:"form-group"},React.createElement("input",{type:"text",className:"form-control",id:"addressInput"}),React.createElement("label",{htmlFor:"addressInput"},"Address")),"Patient"==this.props.accountType&&React.createElement("div",{className:"form-group"},React.createElement("select",{className:"form-control selectpicker",id:"petInput"},React.createElement("option",null,"Dog"),React.createElement("option",null,"Cat"))),"Doctor"==this.props.accountType&&React.createElement("div",{className:"form-group"},React.createElement("input",{type:"text",className:"form-control",id:"specialisationInput"}),React.createElement("label",{htmlFor:"specialisationInput"},"Specialisation")),"Insurance Provider"==this.props.accountType&&React.createElement("div",{className:"form-group"},React.createElement("input",{type:"text",className:"form-control",id:"companyNameInput"}),React.createElement("label",{htmlFor:"companyNameInput"},"Company Name")),React.createElement("input",{className:"btn btn-primary",style:{width:"100%"},type:"submit",value:"submit"}));return c}}]),b}(React.Component);
